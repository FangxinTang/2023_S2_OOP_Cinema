"""uncomment coupon model and test model

Revision ID: 24068ea045ca
Revises: 7f009eadf861
Create Date: 2023-12-27 15:30:48.946571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '24068ea045ca'
down_revision: Union[str, None] = '7f009eadf861'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('credit_cards_coupon_id_fkey', 'credit_cards', type_='foreignkey')
    op.drop_column('credit_cards', 'coupon_id')
    op.drop_constraint('debit_cards_coupon_id_fkey', 'debit_cards', type_='foreignkey')
    op.drop_column('debit_cards', 'coupon_id')
    op.drop_table('coupons')
    op.drop_table('test')


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('debit_cards', sa.Column('coupon_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('debit_cards_coupon_id_fkey', 'debit_cards', 'coupons', ['coupon_id'], ['id'])
    op.add_column('credit_cards', sa.Column('coupon_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('credit_cards_coupon_id_fkey', 'credit_cards', 'coupons', ['coupon_id'], ['id'])
    op.create_table('test',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('datetime_modified', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('datetime_created', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_pkey')
    )
    op.create_table('coupons',
    sa.Column('expiry_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('discount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('datetime_modified', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('datetime_created', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('debit_card_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('credit_card_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_cards.id'], name='coupons_credit_card_id_fkey'),
    sa.ForeignKeyConstraint(['debit_card_id'], ['debit_cards.id'], name='coupons_debit_card_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='coupons_pkey')
    )
    # ### end Alembic commands ###
